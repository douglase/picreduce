.. doctest-skip-all

.. _picreduce.utils:

***************************************************
Data Reduction utilities (``picreduce.utils``)
***************************************************

Data format:

Most data is passed between functions as an HDF5 file structure
created with h5py (http://www.h5py.org). HDF5 files can be read into IDL as structures with the HDF5
Library (http://www.exelisvis.com/docs/HDF5_Overview.html), for tips
on creating hdf5 files in IDL see Coyote's Guide:
http://www.idlcoyote.com/fileio_tips/hdf5struct.html. 

HDF5 files can be sliced as Numpy arrays, across frames, but preserve
the headers and the naming conventions of the GSE idl save
files. `load_or_create` will process an directory of individual
directories. 

Naming conventions:

* a folder containing multiple observations is a _sequence_, each sequence
  is contained in an hdf5
  _file_. I.e. *sequencename/data.hdf5*. inside variables, this file
  should be referred to as the variable *f*.
* each sequence contains multiple observations "colloquially" called
  _datasets_. each dataset corresponds to the folder of IDL save files
  generated by a GSE Reset command. i.e. _jplgse.20150908.69710_. However, in
  HDF5-lingo these are _groups_. in the future, these will likely be renamed
  observations and not datasets to avoid confusion with actual
  datasets, see below. this
  would be accessed in python by

    f['jplgse.20150908.69710']

to see a list of all the observations contained in the file, run:

    f.keys()

* within each data group there are individual datasets
  corresponding to the type of data, i.e.. An array of a
  particular header attribute, for example the exposure time, for all of the frames within this
  a set of observations would be accessed by:

    f['jplgse.20150908.69710']['frame.a.idl.header']['EXPTIME']

* to see a list of all the available subdatasets, run 

    f['jplgse.20150908.69710'].keys()


This allows you to generate masks based on headers, for example the
state variable, and apply them to data frames.

Reference/API
=============

.. automodapi:: picreduce.utils
   :no-inheritance-diagram:
